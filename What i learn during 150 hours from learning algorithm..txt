What i learn during 150 hours from learning algorithm.
- It's obvious that i forgot how to solve the problem sooo easily :) 
(even i solved the problem just a week ago.)

- 최단거리 문제 : 깊이우선탐색(DFS) 보다는 너비우선탐색(BFS)으로 해결한다.
	      그 이유는 너비우선탐색은 목표에 도달했을 때 해당 경로가 가장 최단거리인 반면에,
	      깊이우선탐색은 끝까지 모든 경로를 탐색해보아야 최단거리를 확정할 수 있기 때문이다.


- DFS 의 문제 : 해가 없는 경우 지나치게 깊게 경로를 타고 들어가는 수가 있다. 이럴 땐, 깊이를 제한해두어 해당 깊이 이상 타고들어갈 시에 return 시켜줄 수 있다.


- 알고리즘 문제를 풀다가 틀렸다면, 대부분의 경우 '1.(놓친 논리 || 알고리즘 빈틈) || 2.문제를 잘못 읽은 경우'가 있다. 그것을 먼저 의심하라. 내가 맞는데?? 라고 주장하는 건 맨 끝에 해도 늦지 않다.


- 방문을 체크해주는 배열은 항상 초기화를 신경 쓰기.


- BFS 시간 초과 줄이는 팁 : 불필요한 push를 막아주기.


- 벡터를 매개변수로 넘겨줄 땐 & 기호가 쓰인다.

- 벡터의 erase(주솟값) 함수는 지우고 나면 벡터의 크기도 그만큼 줄고, 삭제된 뒤의 벡터값들이 앞으로 그만큼 당겨진다. 그리고 삭제된 해당 주솟값(위치)을 반환한다.
- 벡터의 erase(start, end) 는 [start, end) 의 범위를 삭제한다.